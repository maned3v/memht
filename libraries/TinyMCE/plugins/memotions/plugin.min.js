tinymce.PluginManager.add('memotions', function(editor, url) {
	var emoticons = [
		["smile|:)", "biggrin|:D", "wink|:wink:", "sad|:("],
		["razz|:P", "cry|:cry:", "angry|:angry:", "boss|:boss:"],
		["bad|:bad:", "eek|:O", "evil|:evil:", "inlove|:inlove:"],
		["kiss|:kiss:", "nerd|:nerd:", "nocomment|:nc:", "redface|:ops:"],
		["sick|:sick:", "uhm|:uhm:", "wtf|:|"],
	];
				
	function getHtml() {
		var emoticonsHtml;

		emoticonsHtml = '<table role="list" class="mce-grid">';
		tinymce.each(emoticons, function(row) {
	
			emoticonsHtml += '<tr>';

			tinymce.each(row, function(icon) {
				
				icon = icon.split("|");
				
				var emoticonUrl = 'assets/smiles/smile_' + icon[0] + '.gif';

				emoticonsHtml += '<td><a href="#" data-mce-url="' + emoticonUrl + '" data-mce-alt="' + icon[1] + '" tabindex="-1" ' +
					'role="option" aria-label="' + icon[0] + '"><img src="' +
					emoticonUrl + '" role="presentation" /></a></td>';
			});

			emoticonsHtml += '</tr>';
		});

		emoticonsHtml += '</table>';

		return emoticonsHtml;
	}

	editor.ui.registry.addButton('memotions', {
		type: 'panelbutton',
		icon: 'emoticons',
		panel: {
			role: 'application',
			autohide: true,
			html: getHtml,
			onclick: function(e) {
				var linkElm = editor.dom.getParent(e.target, 'a');

				if (linkElm) {
					editor.insertContent(linkElm.getAttribute('data-mce-alt'));
					this.hide();
				}
			}
		},
		tooltip: 'Emoticons'
	});
});
